{"artifactJsonType":"APPLICATION","clientSchemaVersion":1.0,"serverSchemaVersion":11.0,"exportedApplication":{"name":"User","isPublic":false,"pages":[{"id":"PageRegister","isDefault":true},{"id":"PageLogin","isDefault":false},{"id":"PageUserHome","isDefault":false}],"publishedPages":[{"id":"PageRegister","isDefault":true},{"id":"PageLogin","isDefault":false},{"id":"PageUserHome","isDefault":false}],"viewMode":false,"appIsExample":false,"unreadCommentThreads":0.0,"unpublishedApplicationDetail":{"appPositioning":{"type":"FIXED"},"navigationSetting":{},"themeSetting":{"sizing":1.0,"density":1.0,"appMaxWidth":"LARGE"}},"publishedApplicationDetail":{"appPositioning":{"type":"FIXED"},"navigationSetting":{},"themeSetting":{"sizing":1.0,"density":1.0,"appMaxWidth":"LARGE"}},"color":"#C2DAF0","icon":"server","slug":"user","unpublishedAppLayout":{"type":"FLUID"},"publishedAppLayout":{"type":"FLUID"},"unpublishedCustomJSLibs":[],"publishedCustomJSLibs":[],"evaluationVersion":2.0,"applicationVersion":2.0,"collapseInvisibleWidgets":true,"isManualUpdate":false,"deleted":false},"datasourceList":[{"datasourceConfiguration":{"connection":{"mode":"READ_WRITE","type":"DIRECT","ssl":{"authType":"DEFAULT"}},"endpoints":[{"port":27017.0}],"url":""},"name":"rescue","pluginId":"mongo-plugin","messages":[],"isAutoGenerated":false,"gitSyncId":"6753fe0129aa746498477387_19fbaf60-f975-4328-9f78-d1bcb22c75fc","deleted":false}],"customJSLibList":[],"pageList":[{"unpublishedPage":{"name":"PageRegister","slug":"pageregister","layouts":[{"viewMode":false,"dsl":{"widgetName":"MainContainer","backgroundColor":"none","rightColumn":4896.0,"snapColumns":64.0,"detachFromLayout":true,"widgetId":"0","topRow":0.0,"bottomRow":500.0,"containerStyle":"none","snapRows":124.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"version":90.0,"minHeight":1292.0,"dynamicTriggerPathList":[],"parentColumnSpace":1.0,"dynamicBindingPathList":[],"leftColumn":0.0,"children":[{"needsErrorInfo":false,"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","mobileBottomRow":65.0,"borderColor":"#E0DEDE","widgetName":"FormRegister","isCanvas":true,"topRow":0.0,"bottomRow":50.0,"parentRowSpace":10.0,"type":"FORM_WIDGET","shouldScrollContents":true,"mobileRightColumn":44.0,"animateLoading":true,"parentColumnSpace":14.0625,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"boxShadow"}],"children":[{"needsErrorInfo":false,"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","mobileBottomRow":400.0,"widgetName":"Canvas2","topRow":0.0,"bottomRow":500.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"minHeight":400.0,"mobileRightColumn":337.5,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"boxShadow"}],"children":[{"needsErrorInfo":false,"mobileBottomRow":5.0,"widgetName":"Title","topRow":0.0,"bottomRow":7.0,"type":"TEXT_WIDGET","mobileRightColumn":25.5,"animateLoading":true,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":23.0,"dynamicBindingPathList":[{"key":"truncateButtonColor"},{"key":"fontFamily"},{"key":"borderRadius"}],"shouldTruncate":false,"truncateButtonColor":"{{appsmith.theme.colors.primaryColor}}","text":"Register","key":"wi2l8ipzej","rightColumn":42.0,"textAlign":"CENTER","dynamicHeight":"AUTO_HEIGHT","widgetId":"k1be66v4pn","minWidth":450.0,"isVisible":true,"fontStyle":"BOLD","textColor":"#231F20","version":1.0,"parentId":"be6olwdtt9","renderMode":"CANVAS","isLoading":false,"mobileTopRow":1.0,"responsiveBehavior":"fill","originalTopRow":0.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":1.5,"maxDynamicHeight":9000.0,"originalBottomRow":7.0,"fontSize":"3rem","minDynamicHeight":4.0},{"resetFormOnClick":true,"needsErrorInfo":false,"boxShadow":"none","mobileBottomRow":37.0,"widgetName":"BtnRegister","onClick":"{{addUser.run().then(() => {\n  navigateTo('PageLogin', {}, 'SAME_WINDOW');\n});}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[],"topRow":44.0,"bottomRow":48.0,"tooltip":"Register","type":"BUTTON_WIDGET","mobileRightColumn":62.0,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":25.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Register","isDisabled":false,"key":"j4qdiez4t2","rightColumn":40.0,"isDefaultClickDisabled":true,"widgetId":"22hbwnexkb","minWidth":120.0,"isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"be6olwdtt9","renderMode":"CANVAS","isLoading":false,"mobileTopRow":33.0,"responsiveBehavior":"hug","originalTopRow":44.0,"disabledWhenInvalid":true,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":46.0,"originalBottomRow":48.0,"buttonVariant":"PRIMARY","placement":"CENTER"},{"boxShadow":"none","topRow":11.0,"tooltip":"Citizen ID must be exactly 10 digits","labelWidth":5.0,"type":"INPUT_WIDGET_V2","animateLoading":true,"resetOnSubmit":true,"leftColumn":11.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"},{"key":"validation"}],"labelStyle":"","inputType":"TEXT","placeholderText":"0123456789","maxChars":"","isDisabled":false,"validation":"{{InpCitizenID.text.length == 10}}","isRequired":true,"dynamicHeight":"FIXED","iconName":"id-number","accentColor":"{{appsmith.theme.colors.primaryColor}}","showStepArrows":false,"isVisible":true,"version":2.0,"isLoading":false,"regex":"^\\d+$","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","originalBottomRow":17.0,"needsErrorInfo":false,"mobileBottomRow":16.0,"widgetName":"InpCitizenID","dynamicPropertyPathList":[],"bottomRow":17.0,"parentRowSpace":10.0,"autoFocus":false,"mobileRightColumn":45.0,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"labelPosition":"Top","key":"uvt34ndy44","labelTextSize":"1rem","rightColumn":54.0,"widgetId":"v2zn5xw9e7","minWidth":450.0,"label":"CitizenID","parentId":"be6olwdtt9","labelAlignment":"left","renderMode":"CANVAS","mobileTopRow":9.0,"responsiveBehavior":"fill","originalTopRow":11.0,"mobileLeftColumn":25.0,"maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"","minDynamicHeight":4.0},{"boxShadow":"none","topRow":21.0,"labelWidth":5.0,"type":"INPUT_WIDGET_V2","animateLoading":true,"resetOnSubmit":true,"leftColumn":11.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"},{"key":"validation"}],"labelStyle":"","inputType":"PASSWORD","placeholderText":"Password","isDisabled":false,"validation":"{{InpPassword.text.length>=8}}","isRequired":true,"dynamicHeight":"FIXED","iconName":"drag-handle-vertical","accentColor":"{{appsmith.theme.colors.primaryColor}}","showStepArrows":false,"isVisible":true,"version":2.0,"isLoading":false,"regex":"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","originalBottomRow":28.0,"needsErrorInfo":false,"mobileBottomRow":24.0,"widgetName":"InpPassword","bottomRow":28.0,"parentRowSpace":10.0,"autoFocus":false,"mobileRightColumn":44.0,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"labelPosition":"Top","key":"uvt34ndy44","labelTextSize":"1rem","rightColumn":54.0,"widgetId":"md53vsodov","errorMessage":"","minWidth":450.0,"label":"Password","parentId":"be6olwdtt9","labelAlignment":"left","renderMode":"CANVAS","mobileTopRow":17.0,"responsiveBehavior":"fill","originalTopRow":21.0,"mobileLeftColumn":24.0,"maxDynamicHeight":9000.0,"shouldAllowAutofill":true,"iconAlign":"left","defaultText":"","minDynamicHeight":4.0},{"boxShadow":"none","topRow":32.0,"labelWidth":5.0,"type":"INPUT_WIDGET_V2","animateLoading":true,"resetOnSubmit":true,"leftColumn":11.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"},{"key":"validation"}],"labelStyle":"","inputType":"PASSWORD","placeholderText":"Confirm password","isDisabled":false,"validation":"{{InpPassword.text == InpConfirmPwd.text}}","isRequired":true,"dynamicHeight":"FIXED","iconName":"drag-handle-vertical","accentColor":"{{appsmith.theme.colors.primaryColor}}","showStepArrows":false,"isVisible":true,"version":2.0,"isLoading":false,"regex":"","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","originalBottomRow":39.0,"needsErrorInfo":false,"mobileBottomRow":24.0,"widgetName":"InpConfirmPwd","bottomRow":39.0,"parentRowSpace":10.0,"autoFocus":false,"mobileRightColumn":44.0,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"labelPosition":"Top","key":"uvt34ndy44","labelTextSize":"1rem","rightColumn":54.0,"widgetId":"uo8zzd0fdc","errorMessage":"","minWidth":450.0,"label":"Confirm password","parentId":"be6olwdtt9","labelAlignment":"left","renderMode":"CANVAS","mobileTopRow":17.0,"responsiveBehavior":"fill","originalTopRow":32.0,"mobileLeftColumn":24.0,"maxDynamicHeight":9000.0,"shouldAllowAutofill":true,"iconAlign":"left","defaultText":"","minDynamicHeight":4.0},{"needsErrorInfo":false,"mobileBottomRow":14.0,"widgetName":"Divider1","thickness":2.0,"topRow":7.0,"bottomRow":11.0,"parentRowSpace":10.0,"type":"DIVIDER_WIDGET","capType":"nc","mobileRightColumn":43.0,"animateLoading":true,"parentColumnSpace":14.0625,"leftColumn":23.0,"dynamicBindingPathList":[],"key":"yvk9ba9srd","dividerColor":"#858282","orientation":"horizontal","strokeStyle":"solid","rightColumn":42.0,"widgetId":"wgehhkpz3f","capSide":0.0,"minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"be6olwdtt9","renderMode":"CANVAS","isLoading":false,"mobileTopRow":10.0,"responsiveBehavior":"fill","originalTopRow":7.0,"mobileLeftColumn":23.0,"originalBottomRow":11.0}],"key":"86ke966i0p","rightColumn":337.5,"detachFromLayout":true,"dynamicHeight":"AUTO_HEIGHT","widgetId":"be6olwdtt9","containerStyle":"none","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"9fl9198h98","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":0.0,"maxDynamicHeight":9000.0,"minDynamicHeight":4.0,"flexLayers":[]}],"borderWidth":"1","positioning":"fixed","flexVerticalAlignment":"stretch","key":"pecdvtb0u1","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"AUTO_HEIGHT","widgetId":"9fl9198h98","minWidth":450.0,"isVisible":true,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":25.0,"responsiveBehavior":"fill","originalTopRow":0.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":20.0,"maxDynamicHeight":9000.0,"originalBottomRow":50.0,"minDynamicHeight":10.0}]},"layoutOnLoadActions":[],"layoutOnLoadActionErrors":[],"validOnPageLoadActions":true,"id":"PageRegister","deleted":false,"policies":[],"userPermissions":[]}],"userPermissions":[],"policyMap":{},"isHidden":false},"publishedPage":{"name":"PageRegister","slug":"pageregister","layouts":[{"viewMode":false,"dsl":{"widgetName":"MainContainer","backgroundColor":"none","rightColumn":4896.0,"snapColumns":64.0,"detachFromLayout":true,"widgetId":"0","topRow":0.0,"bottomRow":500.0,"containerStyle":"none","snapRows":124.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"version":90.0,"minHeight":1292.0,"dynamicTriggerPathList":[],"parentColumnSpace":1.0,"dynamicBindingPathList":[],"leftColumn":0.0,"children":[{"needsErrorInfo":false,"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","mobileBottomRow":65.0,"borderColor":"#E0DEDE","widgetName":"FormRegister","isCanvas":true,"topRow":0.0,"bottomRow":50.0,"parentRowSpace":10.0,"type":"FORM_WIDGET","shouldScrollContents":true,"mobileRightColumn":44.0,"animateLoading":true,"parentColumnSpace":14.0625,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"boxShadow"}],"children":[{"needsErrorInfo":false,"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","mobileBottomRow":400.0,"widgetName":"Canvas2","topRow":0.0,"bottomRow":500.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"minHeight":400.0,"mobileRightColumn":337.5,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"boxShadow"}],"children":[{"needsErrorInfo":false,"mobileBottomRow":5.0,"widgetName":"Title","topRow":0.0,"bottomRow":7.0,"type":"TEXT_WIDGET","mobileRightColumn":25.5,"animateLoading":true,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":23.0,"dynamicBindingPathList":[{"key":"truncateButtonColor"},{"key":"fontFamily"},{"key":"borderRadius"}],"shouldTruncate":false,"truncateButtonColor":"{{appsmith.theme.colors.primaryColor}}","text":"Register","key":"wi2l8ipzej","rightColumn":42.0,"textAlign":"CENTER","dynamicHeight":"AUTO_HEIGHT","widgetId":"k1be66v4pn","minWidth":450.0,"isVisible":true,"fontStyle":"BOLD","textColor":"#231F20","version":1.0,"parentId":"be6olwdtt9","renderMode":"CANVAS","isLoading":false,"mobileTopRow":1.0,"responsiveBehavior":"fill","originalTopRow":0.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":1.5,"maxDynamicHeight":9000.0,"originalBottomRow":7.0,"fontSize":"3rem","minDynamicHeight":4.0},{"resetFormOnClick":true,"needsErrorInfo":false,"boxShadow":"none","mobileBottomRow":37.0,"widgetName":"BtnRegister","onClick":"{{addUser.run().then(() => {\n  navigateTo('PageLogin', {}, 'SAME_WINDOW');\n});}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[],"topRow":44.0,"bottomRow":48.0,"tooltip":"Register","type":"BUTTON_WIDGET","mobileRightColumn":62.0,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":25.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Register","isDisabled":false,"key":"j4qdiez4t2","rightColumn":40.0,"isDefaultClickDisabled":true,"widgetId":"22hbwnexkb","minWidth":120.0,"isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"be6olwdtt9","renderMode":"CANVAS","isLoading":false,"mobileTopRow":33.0,"responsiveBehavior":"hug","originalTopRow":44.0,"disabledWhenInvalid":true,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":46.0,"originalBottomRow":48.0,"buttonVariant":"PRIMARY","placement":"CENTER"},{"boxShadow":"none","topRow":11.0,"tooltip":"Citizen ID must be exactly 10 digits","labelWidth":5.0,"type":"INPUT_WIDGET_V2","animateLoading":true,"resetOnSubmit":true,"leftColumn":11.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"},{"key":"validation"}],"labelStyle":"","inputType":"TEXT","placeholderText":"0123456789","maxChars":"","isDisabled":false,"validation":"{{InpCitizenID.text.length == 10}}","isRequired":true,"dynamicHeight":"FIXED","iconName":"id-number","accentColor":"{{appsmith.theme.colors.primaryColor}}","showStepArrows":false,"isVisible":true,"version":2.0,"isLoading":false,"regex":"^\\d+$","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","originalBottomRow":17.0,"needsErrorInfo":false,"mobileBottomRow":16.0,"widgetName":"InpCitizenID","dynamicPropertyPathList":[],"bottomRow":17.0,"parentRowSpace":10.0,"autoFocus":false,"mobileRightColumn":45.0,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"labelPosition":"Top","key":"uvt34ndy44","labelTextSize":"1rem","rightColumn":54.0,"widgetId":"v2zn5xw9e7","minWidth":450.0,"label":"CitizenID","parentId":"be6olwdtt9","labelAlignment":"left","renderMode":"CANVAS","mobileTopRow":9.0,"responsiveBehavior":"fill","originalTopRow":11.0,"mobileLeftColumn":25.0,"maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"","minDynamicHeight":4.0},{"boxShadow":"none","topRow":21.0,"labelWidth":5.0,"type":"INPUT_WIDGET_V2","animateLoading":true,"resetOnSubmit":true,"leftColumn":11.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"},{"key":"validation"}],"labelStyle":"","inputType":"PASSWORD","placeholderText":"Password","isDisabled":false,"validation":"{{InpPassword.text.length>=8}}","isRequired":true,"dynamicHeight":"FIXED","iconName":"drag-handle-vertical","accentColor":"{{appsmith.theme.colors.primaryColor}}","showStepArrows":false,"isVisible":true,"version":2.0,"isLoading":false,"regex":"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","originalBottomRow":28.0,"needsErrorInfo":false,"mobileBottomRow":24.0,"widgetName":"InpPassword","bottomRow":28.0,"parentRowSpace":10.0,"autoFocus":false,"mobileRightColumn":44.0,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"labelPosition":"Top","key":"uvt34ndy44","labelTextSize":"1rem","rightColumn":54.0,"widgetId":"md53vsodov","errorMessage":"","minWidth":450.0,"label":"Password","parentId":"be6olwdtt9","labelAlignment":"left","renderMode":"CANVAS","mobileTopRow":17.0,"responsiveBehavior":"fill","originalTopRow":21.0,"mobileLeftColumn":24.0,"maxDynamicHeight":9000.0,"shouldAllowAutofill":true,"iconAlign":"left","defaultText":"","minDynamicHeight":4.0},{"boxShadow":"none","topRow":32.0,"labelWidth":5.0,"type":"INPUT_WIDGET_V2","animateLoading":true,"resetOnSubmit":true,"leftColumn":11.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"},{"key":"validation"}],"labelStyle":"","inputType":"PASSWORD","placeholderText":"Confirm password","isDisabled":false,"validation":"{{InpPassword.text == InpConfirmPwd.text}}","isRequired":true,"dynamicHeight":"FIXED","iconName":"drag-handle-vertical","accentColor":"{{appsmith.theme.colors.primaryColor}}","showStepArrows":false,"isVisible":true,"version":2.0,"isLoading":false,"regex":"","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","originalBottomRow":39.0,"needsErrorInfo":false,"mobileBottomRow":24.0,"widgetName":"InpConfirmPwd","bottomRow":39.0,"parentRowSpace":10.0,"autoFocus":false,"mobileRightColumn":44.0,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"labelPosition":"Top","key":"uvt34ndy44","labelTextSize":"1rem","rightColumn":54.0,"widgetId":"uo8zzd0fdc","errorMessage":"","minWidth":450.0,"label":"Confirm password","parentId":"be6olwdtt9","labelAlignment":"left","renderMode":"CANVAS","mobileTopRow":17.0,"responsiveBehavior":"fill","originalTopRow":32.0,"mobileLeftColumn":24.0,"maxDynamicHeight":9000.0,"shouldAllowAutofill":true,"iconAlign":"left","defaultText":"","minDynamicHeight":4.0},{"needsErrorInfo":false,"mobileBottomRow":14.0,"widgetName":"Divider1","thickness":2.0,"topRow":7.0,"bottomRow":11.0,"parentRowSpace":10.0,"type":"DIVIDER_WIDGET","capType":"nc","mobileRightColumn":43.0,"animateLoading":true,"parentColumnSpace":14.0625,"leftColumn":23.0,"dynamicBindingPathList":[],"key":"yvk9ba9srd","dividerColor":"#858282","orientation":"horizontal","strokeStyle":"solid","rightColumn":42.0,"widgetId":"wgehhkpz3f","capSide":0.0,"minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"be6olwdtt9","renderMode":"CANVAS","isLoading":false,"mobileTopRow":10.0,"responsiveBehavior":"fill","originalTopRow":7.0,"mobileLeftColumn":23.0,"originalBottomRow":11.0}],"key":"86ke966i0p","rightColumn":337.5,"detachFromLayout":true,"dynamicHeight":"AUTO_HEIGHT","widgetId":"be6olwdtt9","containerStyle":"none","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"9fl9198h98","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":0.0,"maxDynamicHeight":9000.0,"minDynamicHeight":4.0,"flexLayers":[]}],"borderWidth":"1","positioning":"fixed","flexVerticalAlignment":"stretch","key":"pecdvtb0u1","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"AUTO_HEIGHT","widgetId":"9fl9198h98","minWidth":450.0,"isVisible":true,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":25.0,"responsiveBehavior":"fill","originalTopRow":0.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":20.0,"maxDynamicHeight":9000.0,"originalBottomRow":50.0,"minDynamicHeight":10.0}]},"layoutOnLoadActions":[],"layoutOnLoadActionErrors":[],"validOnPageLoadActions":true,"id":"PageRegister","deleted":false,"policies":[],"userPermissions":[]}],"userPermissions":[],"policyMap":{},"isHidden":false},"gitSyncId":"6757d3bea58e8627004e15ac_56eb180c-1991-4fb7-8305-ea0951e1df78","deleted":false},{"unpublishedPage":{"name":"PageLogin","slug":"pagelogin","layouts":[{"viewMode":false,"dsl":{"widgetName":"MainContainer","backgroundColor":"none","rightColumn":1224.0,"snapColumns":64.0,"detachFromLayout":true,"widgetId":"0","topRow":0.0,"bottomRow":380.0,"containerStyle":"none","snapRows":68.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"version":90.0,"minHeight":700.0,"parentColumnSpace":1.0,"dynamicBindingPathList":[],"leftColumn":0.0,"children":[{"needsErrorInfo":false,"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","mobileBottomRow":65.0,"borderColor":"#E0DEDE","widgetName":"FormRegister","isCanvas":true,"topRow":1.0,"bottomRow":37.0,"parentRowSpace":10.0,"type":"FORM_WIDGET","shouldScrollContents":true,"mobileRightColumn":44.0,"animateLoading":true,"parentColumnSpace":14.0625,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"boxShadow"}],"children":[{"needsErrorInfo":false,"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","mobileBottomRow":400.0,"widgetName":"Canvas2","topRow":0.0,"bottomRow":360.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"minHeight":400.0,"mobileRightColumn":337.5,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"boxShadow"}],"children":[{"needsErrorInfo":false,"mobileBottomRow":5.0,"widgetName":"Title","topRow":0.0,"bottomRow":7.0,"type":"TEXT_WIDGET","mobileRightColumn":25.5,"animateLoading":true,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":23.0,"dynamicBindingPathList":[{"key":"truncateButtonColor"},{"key":"fontFamily"},{"key":"borderRadius"}],"shouldTruncate":false,"truncateButtonColor":"{{appsmith.theme.colors.primaryColor}}","text":"Login","key":"wi2l8ipzej","rightColumn":42.0,"textAlign":"CENTER","dynamicHeight":"AUTO_HEIGHT","widgetId":"th95gj4sqt","minWidth":450.0,"isVisible":true,"fontStyle":"BOLD","textColor":"#231F20","version":1.0,"parentId":"ieqjviqbnr","renderMode":"CANVAS","isLoading":false,"mobileTopRow":1.0,"responsiveBehavior":"fill","originalTopRow":0.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":1.5,"maxDynamicHeight":9000.0,"originalBottomRow":7.0,"fontSize":"3rem","minDynamicHeight":4.0},{"resetFormOnClick":true,"needsErrorInfo":false,"boxShadow":"none","mobileBottomRow":37.0,"widgetName":"BtnLogin","onClick":"{{matchUser.run().then(() => {\n  JSObject1.authenticate(matchUser.data);\n});}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[],"topRow":30.0,"bottomRow":34.0,"tooltip":"Login","type":"BUTTON_WIDGET","mobileRightColumn":62.0,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":24.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Login","isDisabled":false,"key":"j4qdiez4t2","rightColumn":39.0,"isDefaultClickDisabled":true,"widgetId":"bo2z8tzhq0","minWidth":120.0,"isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"ieqjviqbnr","renderMode":"CANVAS","isLoading":false,"mobileTopRow":33.0,"responsiveBehavior":"hug","originalTopRow":30.0,"disabledWhenInvalid":true,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":46.0,"originalBottomRow":34.0,"buttonVariant":"PRIMARY","placement":"CENTER"},{"boxShadow":"none","topRow":11.0,"tooltip":"Citizen ID must be exactly 10 digits","labelWidth":5.0,"type":"INPUT_WIDGET_V2","animateLoading":true,"resetOnSubmit":true,"leftColumn":11.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"}],"labelStyle":"","inputType":"TEXT","placeholderText":"0123456789","maxChars":"","isDisabled":false,"validation":"","isRequired":true,"dynamicHeight":"FIXED","iconName":"id-number","accentColor":"{{appsmith.theme.colors.primaryColor}}","showStepArrows":false,"isVisible":true,"version":2.0,"isLoading":false,"regex":"","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","originalBottomRow":17.0,"needsErrorInfo":false,"mobileBottomRow":16.0,"widgetName":"InpCitizenID","dynamicPropertyPathList":[],"bottomRow":17.0,"parentRowSpace":10.0,"autoFocus":false,"mobileRightColumn":45.0,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"labelPosition":"Top","key":"uvt34ndy44","labelTextSize":"1rem","rightColumn":54.0,"widgetId":"ezbi3e5yqh","minWidth":450.0,"label":"CitizenID","parentId":"ieqjviqbnr","labelAlignment":"left","renderMode":"CANVAS","mobileTopRow":9.0,"responsiveBehavior":"fill","originalTopRow":11.0,"mobileLeftColumn":25.0,"maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"","minDynamicHeight":4.0},{"boxShadow":"none","topRow":21.0,"labelWidth":5.0,"type":"INPUT_WIDGET_V2","animateLoading":true,"resetOnSubmit":true,"leftColumn":11.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"}],"labelStyle":"","inputType":"PASSWORD","placeholderText":"Password","isDisabled":false,"validation":"","isRequired":true,"dynamicHeight":"FIXED","iconName":"drag-handle-vertical","accentColor":"{{appsmith.theme.colors.primaryColor}}","showStepArrows":false,"isVisible":true,"version":2.0,"isLoading":false,"regex":"","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","originalBottomRow":28.0,"needsErrorInfo":false,"mobileBottomRow":24.0,"widgetName":"InpPassword","bottomRow":28.0,"parentRowSpace":10.0,"autoFocus":false,"mobileRightColumn":44.0,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"labelPosition":"Top","key":"uvt34ndy44","labelTextSize":"1rem","rightColumn":54.0,"widgetId":"92bvsb52e0","errorMessage":"","minWidth":450.0,"label":"Password","parentId":"ieqjviqbnr","labelAlignment":"left","renderMode":"CANVAS","mobileTopRow":17.0,"responsiveBehavior":"fill","originalTopRow":21.0,"mobileLeftColumn":24.0,"maxDynamicHeight":9000.0,"shouldAllowAutofill":true,"iconAlign":"left","defaultText":"","minDynamicHeight":4.0},{"needsErrorInfo":false,"mobileBottomRow":14.0,"widgetName":"Divider1","thickness":2.0,"topRow":7.0,"bottomRow":11.0,"parentRowSpace":10.0,"type":"DIVIDER_WIDGET","capType":"nc","mobileRightColumn":43.0,"animateLoading":true,"parentColumnSpace":14.0625,"leftColumn":23.0,"dynamicBindingPathList":[],"key":"yvk9ba9srd","dividerColor":"#858282","orientation":"horizontal","strokeStyle":"solid","rightColumn":42.0,"widgetId":"1k7anz29kj","capSide":0.0,"minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"ieqjviqbnr","renderMode":"CANVAS","isLoading":false,"mobileTopRow":10.0,"responsiveBehavior":"fill","originalTopRow":7.0,"mobileLeftColumn":23.0,"originalBottomRow":11.0}],"key":"86ke966i0p","rightColumn":337.5,"detachFromLayout":true,"dynamicHeight":"AUTO_HEIGHT","widgetId":"ieqjviqbnr","containerStyle":"none","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"fqx3tyy9yl","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":0.0,"maxDynamicHeight":9000.0,"minDynamicHeight":4.0,"flexLayers":[]}],"borderWidth":"1","positioning":"fixed","flexVerticalAlignment":"stretch","key":"pecdvtb0u1","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"AUTO_HEIGHT","widgetId":"fqx3tyy9yl","minWidth":450.0,"isVisible":true,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":25.0,"responsiveBehavior":"fill","originalTopRow":1.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":20.0,"maxDynamicHeight":9000.0,"originalBottomRow":37.0,"minDynamicHeight":10.0},{"needsErrorInfo":false,"boxShadow":"none","mobileBottomRow":30.0,"widgetName":"MdUserNotFound","isCanvas":true,"topRow":6.0,"bottomRow":246.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","shouldScrollContents":true,"mobileRightColumn":31.0,"animateLoading":true,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"leftColumn":7.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"needsErrorInfo":false,"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","mobileBottomRow":240.0,"widgetName":"Canvas3","topRow":0.0,"bottomRow":240.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"shouldScrollContents":false,"minHeight":240.0,"mobileRightColumn":337.5,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"boxShadow"}],"children":[{"needsErrorInfo":false,"boxShadow":"none","mobileBottomRow":4.0,"widgetName":"IconButton1","onClick":"{{closeModal(MdUserNotFound.name);}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","topRow":0.0,"bottomRow":4.0,"type":"ICON_BUTTON_WIDGET","mobileRightColumn":64.0,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":58.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"iconSize":24.0,"isDisabled":false,"key":"aellr9ba8w","rightColumn":64.0,"iconName":"cross","widgetId":"w2vwpx1uvk","minWidth":50.0,"isVisible":true,"version":1.0,"parentId":"cn93zfbjr9","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"hug","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":58.0,"buttonVariant":"TERTIARY"},{"needsErrorInfo":false,"mobileBottomRow":5.0,"widgetName":"Text1","topRow":1.0,"bottomRow":5.0,"type":"TEXT_WIDGET","mobileRightColumn":41.0,"shouldScrollContents":true,"animateLoading":true,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":1.0,"dynamicBindingPathList":[{"key":"truncateButtonColor"},{"key":"fontFamily"},{"key":"borderRadius"}],"shouldTruncate":false,"truncateButtonColor":"{{appsmith.theme.colors.primaryColor}}","text":"User not found","key":"v5iw063st3","rightColumn":41.0,"textAlign":"LEFT","dynamicHeight":"AUTO_HEIGHT","widgetId":"4wjp4qvfri","minWidth":450.0,"isVisible":true,"fontStyle":"BOLD","textColor":"#231F20","version":1.0,"parentId":"cn93zfbjr9","renderMode":"CANVAS","isLoading":false,"mobileTopRow":1.0,"responsiveBehavior":"fill","originalTopRow":1.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":1.0,"maxDynamicHeight":9000.0,"originalBottomRow":5.0,"fontSize":"1.25rem","minDynamicHeight":4.0},{"resetFormOnClick":false,"needsErrorInfo":false,"boxShadow":"none","mobileBottomRow":22.0,"widgetName":"Button1","onClick":"{{closeModal(MdUserNotFound.name);}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","topRow":18.0,"bottomRow":22.0,"type":"BUTTON_WIDGET","mobileRightColumn":47.0,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":31.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Close","isDisabled":false,"key":"f8wmu5t1oc","rightColumn":47.0,"isDefaultClickDisabled":true,"widgetId":"j8umcwvqh7","buttonStyle":"PRIMARY","minWidth":120.0,"isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"cn93zfbjr9","renderMode":"CANVAS","isLoading":false,"mobileTopRow":18.0,"responsiveBehavior":"hug","disabledWhenInvalid":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":31.0,"buttonVariant":"SECONDARY","placement":"CENTER"},{"resetFormOnClick":false,"needsErrorInfo":false,"boxShadow":"none","mobileBottomRow":22.0,"widgetName":"Button2","buttonColor":"{{appsmith.theme.colors.primaryColor}}","topRow":18.0,"bottomRow":22.0,"type":"BUTTON_WIDGET","mobileRightColumn":63.0,"animateLoading":true,"leftColumn":47.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Confirm","isDisabled":false,"key":"f8wmu5t1oc","rightColumn":63.0,"isDefaultClickDisabled":true,"widgetId":"amyll4j3u7","buttonStyle":"PRIMARY_BUTTON","minWidth":120.0,"isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"cn93zfbjr9","renderMode":"CANVAS","isLoading":false,"mobileTopRow":18.0,"responsiveBehavior":"hug","disabledWhenInvalid":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":47.0,"buttonVariant":"PRIMARY","placement":"CENTER"}],"isDisabled":false,"key":"9x8o9pg6bm","rightColumn":337.5,"detachFromLayout":true,"dynamicHeight":"AUTO_HEIGHT","widgetId":"cn93zfbjr9","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"wfoq3fa9d0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":0.0,"maxDynamicHeight":9000.0,"minDynamicHeight":4.0,"flexLayers":[]}],"key":"690eb5ag0j","height":240.0,"rightColumn":31.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"wfoq3fa9d0","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":6.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":7.0,"maxDynamicHeight":9000.0,"width":456.0,"minDynamicHeight":24.0}]},"layoutOnLoadActions":[],"layoutOnLoadActionErrors":[],"validOnPageLoadActions":true,"id":"PageLogin","deleted":false,"policies":[],"userPermissions":[]}],"userPermissions":[],"policyMap":{},"isHidden":false},"publishedPage":{"name":"PageLogin","slug":"pagelogin","layouts":[{"viewMode":false,"dsl":{"widgetName":"MainContainer","backgroundColor":"none","rightColumn":1224.0,"snapColumns":64.0,"detachFromLayout":true,"widgetId":"0","topRow":0.0,"bottomRow":380.0,"containerStyle":"none","snapRows":68.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"version":90.0,"minHeight":700.0,"parentColumnSpace":1.0,"dynamicBindingPathList":[],"leftColumn":0.0,"children":[{"needsErrorInfo":false,"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","mobileBottomRow":65.0,"borderColor":"#E0DEDE","widgetName":"FormRegister","isCanvas":true,"topRow":1.0,"bottomRow":37.0,"parentRowSpace":10.0,"type":"FORM_WIDGET","shouldScrollContents":true,"mobileRightColumn":44.0,"animateLoading":true,"parentColumnSpace":14.0625,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"boxShadow"}],"children":[{"needsErrorInfo":false,"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","mobileBottomRow":400.0,"widgetName":"Canvas2","topRow":0.0,"bottomRow":360.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"minHeight":400.0,"mobileRightColumn":337.5,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"boxShadow"}],"children":[{"needsErrorInfo":false,"mobileBottomRow":5.0,"widgetName":"Title","topRow":0.0,"bottomRow":7.0,"type":"TEXT_WIDGET","mobileRightColumn":25.5,"animateLoading":true,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":23.0,"dynamicBindingPathList":[{"key":"truncateButtonColor"},{"key":"fontFamily"},{"key":"borderRadius"}],"shouldTruncate":false,"truncateButtonColor":"{{appsmith.theme.colors.primaryColor}}","text":"Login","key":"wi2l8ipzej","rightColumn":42.0,"textAlign":"CENTER","dynamicHeight":"AUTO_HEIGHT","widgetId":"th95gj4sqt","minWidth":450.0,"isVisible":true,"fontStyle":"BOLD","textColor":"#231F20","version":1.0,"parentId":"ieqjviqbnr","renderMode":"CANVAS","isLoading":false,"mobileTopRow":1.0,"responsiveBehavior":"fill","originalTopRow":0.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":1.5,"maxDynamicHeight":9000.0,"originalBottomRow":7.0,"fontSize":"3rem","minDynamicHeight":4.0},{"resetFormOnClick":true,"needsErrorInfo":false,"boxShadow":"none","mobileBottomRow":37.0,"widgetName":"BtnLogin","onClick":"{{matchUser.run().then(() => {\n  JSObject1.authenticate(matchUser.data);\n});}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[],"topRow":30.0,"bottomRow":34.0,"tooltip":"Login","type":"BUTTON_WIDGET","mobileRightColumn":62.0,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":24.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Login","isDisabled":false,"key":"j4qdiez4t2","rightColumn":39.0,"isDefaultClickDisabled":true,"widgetId":"bo2z8tzhq0","minWidth":120.0,"isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"ieqjviqbnr","renderMode":"CANVAS","isLoading":false,"mobileTopRow":33.0,"responsiveBehavior":"hug","originalTopRow":30.0,"disabledWhenInvalid":true,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":46.0,"originalBottomRow":34.0,"buttonVariant":"PRIMARY","placement":"CENTER"},{"boxShadow":"none","topRow":11.0,"tooltip":"Citizen ID must be exactly 10 digits","labelWidth":5.0,"type":"INPUT_WIDGET_V2","animateLoading":true,"resetOnSubmit":true,"leftColumn":11.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"}],"labelStyle":"","inputType":"TEXT","placeholderText":"0123456789","maxChars":"","isDisabled":false,"validation":"","isRequired":true,"dynamicHeight":"FIXED","iconName":"id-number","accentColor":"{{appsmith.theme.colors.primaryColor}}","showStepArrows":false,"isVisible":true,"version":2.0,"isLoading":false,"regex":"","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","originalBottomRow":17.0,"needsErrorInfo":false,"mobileBottomRow":16.0,"widgetName":"InpCitizenID","dynamicPropertyPathList":[],"bottomRow":17.0,"parentRowSpace":10.0,"autoFocus":false,"mobileRightColumn":45.0,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"labelPosition":"Top","key":"uvt34ndy44","labelTextSize":"1rem","rightColumn":54.0,"widgetId":"ezbi3e5yqh","minWidth":450.0,"label":"CitizenID","parentId":"ieqjviqbnr","labelAlignment":"left","renderMode":"CANVAS","mobileTopRow":9.0,"responsiveBehavior":"fill","originalTopRow":11.0,"mobileLeftColumn":25.0,"maxDynamicHeight":9000.0,"iconAlign":"left","defaultText":"","minDynamicHeight":4.0},{"boxShadow":"none","topRow":21.0,"labelWidth":5.0,"type":"INPUT_WIDGET_V2","animateLoading":true,"resetOnSubmit":true,"leftColumn":11.0,"dynamicBindingPathList":[{"key":"accentColor"},{"key":"borderRadius"}],"labelStyle":"","inputType":"PASSWORD","placeholderText":"Password","isDisabled":false,"validation":"","isRequired":true,"dynamicHeight":"FIXED","iconName":"drag-handle-vertical","accentColor":"{{appsmith.theme.colors.primaryColor}}","showStepArrows":false,"isVisible":true,"version":2.0,"isLoading":false,"regex":"","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","originalBottomRow":28.0,"needsErrorInfo":false,"mobileBottomRow":24.0,"widgetName":"InpPassword","bottomRow":28.0,"parentRowSpace":10.0,"autoFocus":false,"mobileRightColumn":44.0,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"labelPosition":"Top","key":"uvt34ndy44","labelTextSize":"1rem","rightColumn":54.0,"widgetId":"92bvsb52e0","errorMessage":"","minWidth":450.0,"label":"Password","parentId":"ieqjviqbnr","labelAlignment":"left","renderMode":"CANVAS","mobileTopRow":17.0,"responsiveBehavior":"fill","originalTopRow":21.0,"mobileLeftColumn":24.0,"maxDynamicHeight":9000.0,"shouldAllowAutofill":true,"iconAlign":"left","defaultText":"","minDynamicHeight":4.0},{"needsErrorInfo":false,"mobileBottomRow":14.0,"widgetName":"Divider1","thickness":2.0,"topRow":7.0,"bottomRow":11.0,"parentRowSpace":10.0,"type":"DIVIDER_WIDGET","capType":"nc","mobileRightColumn":43.0,"animateLoading":true,"parentColumnSpace":14.0625,"leftColumn":23.0,"dynamicBindingPathList":[],"key":"yvk9ba9srd","dividerColor":"#858282","orientation":"horizontal","strokeStyle":"solid","rightColumn":42.0,"widgetId":"1k7anz29kj","capSide":0.0,"minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"ieqjviqbnr","renderMode":"CANVAS","isLoading":false,"mobileTopRow":10.0,"responsiveBehavior":"fill","originalTopRow":7.0,"mobileLeftColumn":23.0,"originalBottomRow":11.0}],"key":"86ke966i0p","rightColumn":337.5,"detachFromLayout":true,"dynamicHeight":"AUTO_HEIGHT","widgetId":"ieqjviqbnr","containerStyle":"none","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"fqx3tyy9yl","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":0.0,"maxDynamicHeight":9000.0,"minDynamicHeight":4.0,"flexLayers":[]}],"borderWidth":"1","positioning":"fixed","flexVerticalAlignment":"stretch","key":"pecdvtb0u1","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"AUTO_HEIGHT","widgetId":"fqx3tyy9yl","minWidth":450.0,"isVisible":true,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":25.0,"responsiveBehavior":"fill","originalTopRow":1.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":20.0,"maxDynamicHeight":9000.0,"originalBottomRow":37.0,"minDynamicHeight":10.0},{"needsErrorInfo":false,"boxShadow":"none","mobileBottomRow":30.0,"widgetName":"MdUserNotFound","isCanvas":true,"topRow":6.0,"bottomRow":246.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","shouldScrollContents":true,"mobileRightColumn":31.0,"animateLoading":true,"parentColumnSpace":14.0625,"dynamicTriggerPathList":[],"leftColumn":7.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"needsErrorInfo":false,"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","mobileBottomRow":240.0,"widgetName":"Canvas3","topRow":0.0,"bottomRow":240.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"shouldScrollContents":false,"minHeight":240.0,"mobileRightColumn":337.5,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"boxShadow"}],"children":[{"needsErrorInfo":false,"boxShadow":"none","mobileBottomRow":4.0,"widgetName":"IconButton1","onClick":"{{closeModal(MdUserNotFound.name);}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","topRow":0.0,"bottomRow":4.0,"type":"ICON_BUTTON_WIDGET","mobileRightColumn":64.0,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":58.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"iconSize":24.0,"isDisabled":false,"key":"aellr9ba8w","rightColumn":64.0,"iconName":"cross","widgetId":"w2vwpx1uvk","minWidth":50.0,"isVisible":true,"version":1.0,"parentId":"cn93zfbjr9","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"hug","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":58.0,"buttonVariant":"TERTIARY"},{"needsErrorInfo":false,"mobileBottomRow":5.0,"widgetName":"Text1","topRow":1.0,"bottomRow":5.0,"type":"TEXT_WIDGET","mobileRightColumn":41.0,"shouldScrollContents":true,"animateLoading":true,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":1.0,"dynamicBindingPathList":[{"key":"truncateButtonColor"},{"key":"fontFamily"},{"key":"borderRadius"}],"shouldTruncate":false,"truncateButtonColor":"{{appsmith.theme.colors.primaryColor}}","text":"User not found","key":"v5iw063st3","rightColumn":41.0,"textAlign":"LEFT","dynamicHeight":"AUTO_HEIGHT","widgetId":"4wjp4qvfri","minWidth":450.0,"isVisible":true,"fontStyle":"BOLD","textColor":"#231F20","version":1.0,"parentId":"cn93zfbjr9","renderMode":"CANVAS","isLoading":false,"mobileTopRow":1.0,"responsiveBehavior":"fill","originalTopRow":1.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":1.0,"maxDynamicHeight":9000.0,"originalBottomRow":5.0,"fontSize":"1.25rem","minDynamicHeight":4.0},{"resetFormOnClick":false,"needsErrorInfo":false,"boxShadow":"none","mobileBottomRow":22.0,"widgetName":"Button1","onClick":"{{closeModal(MdUserNotFound.name);}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","topRow":18.0,"bottomRow":22.0,"type":"BUTTON_WIDGET","mobileRightColumn":47.0,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":31.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Close","isDisabled":false,"key":"f8wmu5t1oc","rightColumn":47.0,"isDefaultClickDisabled":true,"widgetId":"j8umcwvqh7","buttonStyle":"PRIMARY","minWidth":120.0,"isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"cn93zfbjr9","renderMode":"CANVAS","isLoading":false,"mobileTopRow":18.0,"responsiveBehavior":"hug","disabledWhenInvalid":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":31.0,"buttonVariant":"SECONDARY","placement":"CENTER"},{"resetFormOnClick":false,"needsErrorInfo":false,"boxShadow":"none","mobileBottomRow":22.0,"widgetName":"Button2","buttonColor":"{{appsmith.theme.colors.primaryColor}}","topRow":18.0,"bottomRow":22.0,"type":"BUTTON_WIDGET","mobileRightColumn":63.0,"animateLoading":true,"leftColumn":47.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Confirm","isDisabled":false,"key":"f8wmu5t1oc","rightColumn":63.0,"isDefaultClickDisabled":true,"widgetId":"amyll4j3u7","buttonStyle":"PRIMARY_BUTTON","minWidth":120.0,"isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"cn93zfbjr9","renderMode":"CANVAS","isLoading":false,"mobileTopRow":18.0,"responsiveBehavior":"hug","disabledWhenInvalid":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":47.0,"buttonVariant":"PRIMARY","placement":"CENTER"}],"isDisabled":false,"key":"9x8o9pg6bm","rightColumn":337.5,"detachFromLayout":true,"dynamicHeight":"AUTO_HEIGHT","widgetId":"cn93zfbjr9","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"wfoq3fa9d0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":0.0,"maxDynamicHeight":9000.0,"minDynamicHeight":4.0,"flexLayers":[]}],"key":"690eb5ag0j","height":240.0,"rightColumn":31.0,"detachFromLayout":true,"dynamicHeight":"FIXED","widgetId":"wfoq3fa9d0","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":6.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":7.0,"maxDynamicHeight":9000.0,"width":456.0,"minDynamicHeight":24.0}]},"layoutOnLoadActions":[],"layoutOnLoadActionErrors":[],"validOnPageLoadActions":true,"id":"PageLogin","deleted":false,"policies":[],"userPermissions":[]}],"userPermissions":[],"policyMap":{},"isHidden":false},"gitSyncId":"6757d3bea58e8627004e15ac_79224b94-308b-4153-971c-a2fc29bc2a81","deleted":false},{"unpublishedPage":{"name":"PageUserHome","slug":"pageuserhome","layouts":[{"viewMode":false,"dsl":{"widgetName":"MainContainer","backgroundColor":"none","rightColumn":1224.0,"snapColumns":64.0,"detachFromLayout":true,"widgetId":"0","topRow":0.0,"bottomRow":970.0,"containerStyle":"none","snapRows":68.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"version":90.0,"minHeight":700.0,"parentColumnSpace":1.0,"dynamicBindingPathList":[],"leftColumn":0.0,"children":[{"needsErrorInfo":false,"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","mobileBottomRow":10.0,"widgetName":"PageContainer","borderColor":"#E0DEDE","isCanvas":true,"topRow":0.0,"bottomRow":97.0,"parentRowSpace":10.0,"type":"CONTAINER_WIDGET","shouldScrollContents":true,"mobileRightColumn":23.0,"animateLoading":true,"parentColumnSpace":14.375,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"boxShadow"}],"children":[{"needsErrorInfo":false,"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","mobileBottomRow":100.0,"widgetName":"Canvas1","topRow":0.0,"bottomRow":970.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":false,"minHeight":100.0,"mobileRightColumn":330.625,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"boxShadow"}],"children":[{"needsErrorInfo":false,"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","mobileBottomRow":45.0,"widgetName":"osm_1","borderColor":"#E0DEDE","srcDoc":{"html":"<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.css\"/>\n<script src=\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.js\"></script>\n\n<div id=\"map\"></div>\n","css":"#map {\n  height: 100vh;\n}\n\n.popup-content {\n  font-size: 14px;\n}\n\n#controls {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  z-index: 1000;\n  background-color: white;\n  padding: 10px;\n  border-radius: 5px;\n}\n\nbutton {\n  background-color: red;\n  border-color: transparent;\n  color: white;\n}","js":"class lcdp_map {\n  constructor(containerId, options = {}) {\n    this.map = L.map(containerId, options);\n    this.markers = [];\n    this.polylines = [];\n    this.currentLocation = null;\n    L.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution: \"© OpenStreetMap contributors\"\n    }).addTo(this.map);\n  }\n\n  /*\n    * Create a marker with a custom popup.\n    * @param {number} lat - Latitude\n    * @param {number} lng - Longitude\n    * @param {string} title - Popup title\n    * @param {string} content - Popup content\n    * @param {string} iconClass - Font Awesome class (default: 'fa-map-marker-alt')\n    * @param {string} iconColor - Icon color (default: '#003C71')\n    * @param {Object} options - Additional options for marker and popup\n    * @returns {Object} marker - The created marker\n    */\n  createMarker(lat, lng, title = \"\", content = \"\", iconClass = \"fa-map-marker-alt\", iconColor = \"#003C71\", options = {}) {\n    const customIcon = L.divIcon({\n      html: `\n        <span class=\"fa-stack fa-lg\" style=\"font-size: 20px;\">\n          <i class=\"fa-regular fa-circle fa-stack-2x\" style=\"color: ${iconColor}; opacity: 0.8;\"></i>\n          <i class=\"${iconClass} fa-stack-1x\" style=\"color: ${iconColor};\"></i>\n        </span>\n      `,\n      className: \"custom-marker-icon\",\n      iconSize: [40, 40],\n      iconAnchor: [20, 20],\n      popupAnchor: [0, -20]\n    });\n    const markerOptions = {\n      ...options.marker,\n      icon: customIcon\n    };\n    const popupOptions = {\n      ...options.popup,\n      className: \"custom-popup\"\n    };\n    const popupContent = `\n      <div class=\"popup-content\">\n        <h3 class=\"popup-title\">${title}</h3>\n        <div class=\"popup-body\">${content}</div>\n\t\t\t\t${confirmationButton}\n      </div>\n    `;\n    const marker = L.marker([lat, lng], markerOptions).addTo(this.map).bindPopup(popupContent, popupOptions).openPopup();\n    this.markers.push(marker);\n    return marker;\n  }\n\n  /*\n   * Add a marker to the map.\n   * @param {number} lat - Latitude of the marker\n   * @param {number} lng - Longitude of the marker\n   * @param {string} title - Title of the marker's popup\n   * @param {string} content - Content of the popup\n   * @param {string} iconClass - Font Awesome icon class for the marker (default: 'fa-map-marker-alt')\n   * @param {string} iconColor - Color for the marker icon (default: '#003C71')\n   * @param {Object} options - Additional options for marker and popup\n   * @returns {Object} marker - The created marker\n   */\n  addMarker(lat, lng, title = \"\", content = \"\", iconClass = \"fa-solid fa-location-dot\", iconColor = \"#003C71\", options = {}) {\n    const marker = this.createMarker(lat, lng, title, content, iconClass, iconColor, options);\n    this.markers.push(marker); // Store the marker for potential future removal or management\n    return marker;\n  }\n\n  /*\n    * Update the current location marker and zoom to its position.\n    * @param {number} lat - Latitude\n    * @param {number} lng - Longitude\n    * @param {string} title - Title for the marker (default: \"Current location\")\n    * @param {string} content - Content for the popup\n    * @returns {Object} marker - The current location marker\n    */\n  updateCurrentLocation(lat, lng, title = \"Current location\", content = \"Current location\") {\n    if (this.currentLocation) {\n      this.currentLocation.remove();\n      this.markers = this.markers.filter(m => m !== this.currentLocation);\n    }\n    this.currentLocation = this.createMarker(lat, lng, title, content, \"fa-solid fa-location-dot\",\n    // A unique icon for current location\n    \"#FF0000\" // Red color for the current location\n    );\n    this.markers.push(this.currentLocation);\n    return this.currentLocation;\n  }\n\n  /*\n    * Get the user's current GPS location and update the map with a marker.\n    * @returns {Promise<void>}\n    */\n  async getCurrentLocation() {\n    this.map.setView([appsmith.model.location.lat, appsmith.model.location.lng], 17);\n    this.updateCurrentLocation(appsmith.model.location.lat, appsmith.model.location.lng, \"Führer location\");\n  }\n\n  /*\n   * Calculate the distance between two geographical points (in kilometers).\n   * Uses the Haversine formula to account for the curvature of the Earth.\n   * @param {number} lat1 - Latitude of the first point\n   * @param {number} lng1 - Longitude of the first point\n   * @param {number} lat2 - Latitude of the second point\n   * @param {number} lng2 - Longitude of the second point\n   * @returns {number} distance - The distance in kilometers, rounded to two decimal places\n   */\n  calculateDistance(lat1, lng1, lat2, lng2) {\n    const R = 6371; // Radius of the Earth in kilometers\n\n    // Convert degrees to radians\n    const dLat = this.toRad(lat2 - lat1);\n    const dLng = this.toRad(lng2 - lng1);\n\n    // Convert input coordinates to radians\n    const radLat1 = this.toRad(lat1);\n    const radLat2 = this.toRad(lat2);\n\n    // Apply the Haversine formula\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(radLat1) * Math.cos(radLat2) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    // Distance in kilometers\n    const distance = R * c;\n\n    // Return the distance rounded to two decimal places\n    return Math.round(distance * 100) / 100;\n  }\n\n  /*\n   * Convert degrees to radians.\n   * @private\n   * @param {number} degrees - Degrees to convert\n   * @returns {number} radians - Converted value in radians\n   */\n  toRad(degrees) {\n    return degrees * Math.PI / 180;\n  }\n\n  /*\n    * Draw a polyline between two points (latitude, longitude).\n    * @param {number} lat1 - Latitude of the first point\n    * @param {number} lng1 - Longitude of the first point\n    * @param {number} lat2 - Latitude of the second point\n    * @param {number} lng2 - Longitude of the second point\n    * @param {Object} options - Optional parameters for the polyline\n    * @returns {Promise} polyline - The created polyline\n    */\n  async drawRoute(lat1, lng1, lat2, lng2, options = {}) {\n    const defaultOptions = {\n      color: \"#003C71\",\n      // Default color\n      weight: 3,\n      // Line thickness\n      opacity: 0.8,\n      // Line opacity\n      dashArray: null,\n      // Dashes (null = solid line)\n      ...options\n    };\n    try {\n      // Request route data from OSRM API\n      const response = await fetch(`https://router.project-osrm.org/route/v1/driving/${lng1},${lat1};${lng2},${lat2}?overview=full&geometries=geojson`);\n      const data = await response.json();\n      if (data.code !== \"Ok\" || !data.routes.length) {\n        throw new Error(\"Could not find a route\");\n      }\n\n      // Get route coordinates from response\n      const coordinates = data.routes[0].geometry.coordinates;\n\n      // Convert [lng, lat] to [lat, lng] for Leaflet\n      const latlngs = coordinates.map(coord => [coord[1], coord[0]]);\n\n      // Delete old lines, marker\n      this.clearRoutes();\n\n      // Draw\n      const polyline = L.polyline(latlngs, defaultOptions).addTo(this.map);\n\n      // Added management section\n      this.polylines.push(polyline);\n\n      // Automatically zooms to show the entire road\n      this.map.fitBounds(polyline.getBounds(), {\n        padding: [50, 50]\n      });\n      return polyline;\n    } catch (error) {\n      console.error(\"Error drawing route:\", error);\n      return null;\n    }\n  }\n\n  /*\n    * Draw a polyline between two points (latitude, longitude).\n    * @param {number} lat_des - Latitude of the first point\n    * @param {number} lng_des - Longitude of the first point\n    * @param {Object} options - Optional parameters for the polyline\n    * @returns {Promise} polyline - The created polyline\n    */\n  async current_to_marker(lat_des, lng_des, options = {}) {\n    const defaultOptions = {\n      color: \"#003C71\",\n      // Default color\n      weight: 3,\n      // Line thickness\n      opacity: 0.8,\n      // Line opacity\n      dashArray: null,\n      // Dashes (null = solid line)\n      ...options\n    };\n    try {\n      const position = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          enableHighAccuracy: true,\n          timeout: 5000,\n          maximumAge: 0\n        });\n      });\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      // Request route data from OSRM API\n      const response = await fetch(`https://router.project-osrm.org/route/v1/driving/${longitude},${latitude};${lng_des},${lat_des}?overview=full&geometries=geojson`);\n      const data = await response.json();\n      if (data.code !== \"Ok\" || !data.routes.length) {\n        throw new Error(\"Could not find a route\");\n      }\n\n      // Get route coordinates from response\n      const coordinates = data.routes[0].geometry.coordinates;\n\n      // Convert [lng, lat] to [lat, lng] for Leaflet\n      const latlngs = coordinates.map(coord => [coord[1], coord[0]]);\n\n      // Delete old lines, marker\n      this.clearRoutes();\n\n      // Draw\n      const polyline = L.polyline(latlngs, defaultOptions).addTo(this.map);\n\n      // Added management section\n      this.polylines.push(polyline);\n\n      // Automatically zooms to show the entire road\n      this.map.fitBounds(polyline.getBounds(), {\n        padding: [50, 50]\n      });\n      return polyline;\n    } catch (error) {\n      console.error(\"Error drawing route:\", error);\n      return null;\n    }\n  }\n\n  /*\n    * Remove all drawn routes (polylines) from the map.\n    */\n  clearRoutes() {\n    this.polylines.forEach(polyline => {\n      polyline.remove();\n    });\n    this.polylines = [];\n  }\n\n  /*\n   * Remove all markers from the map.\n   */\n  clearMarkers() {\n    this.markers.forEach(marker => {\n      marker.remove();\n    });\n    this.markers = [];\n  }\n\n  /*\n    * Find a location by address and return its coordinates.\n    * @param {string} address - The address to search\n    * @returns {Promise<{lat: number, lng: number} | null>} - Coordinates or null if not found\n    */\n  async searchAddress(address) {\n    try {\n      const response = await fetch(`https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(address)}&format=json&addressdetails=1`);\n      const data = await response.json();\n      if (data && data.length > 0) {\n        return {\n          lat: parseFloat(data[0].lat),\n          lng: parseFloat(data[0].lon)\n        };\n      }\n      return null;\n    } catch (error) {\n      console.error(\"Error searching address:\", error);\n      return null;\n    }\n  }\n\n  /*\n    * Search for an address and mark it on the map.\n    * @param {string} address - The address to search\n    * @param {Object} options - Marker options\n    * @returns {Promise<Object|null>} - The created marker or null if not found\n    */\n  async searchAndMarkAddress(address, options = {}) {\n    const coords = await this.searchAddress(address);\n    if (coords) {\n      const marker = this.createMarker(coords.lat, coords.lng, address,\n      // Use address as the marker title\n      \"\",\n      // No content for the popup\n      options.iconClass || \"fa-map-marker-alt\", options.iconColor || \"#003C71\", options);\n\n      // Move the map to the found location\n      this.map.setView([coords.lat, coords.lng], 16);\n      return marker;\n    }\n    return null;\n  }\n}\n\n// Appsmith integration\nappsmith.onReady(() => {\n  var mapApp = new lcdp_map(\"map\", {\n    center: [21.055, 105.735136],\n    // Default location for initialization\n    zoom: 17\n  });\n\n  // Call the method to get and update current location\n  mapApp.getCurrentLocation();\n  mapApp.map.on(\"click\", e => {\n    appsmith.triggerEvent(\"mapClicked\", e.latlng);\n  });\n});"},"isCanvas":false,"dynamicPropertyPathList":[{"key":"isVisible"},{"key":"mapClicked"}],"topRow":1.0,"bottomRow":95.0,"parentRowSpace":10.0,"type":"CUSTOM_WIDGET","mobileRightColumn":37.0,"mapClicked":"{{await storeValue(\"pingLocation\", {lat,lng}); showModal(Modal1.name)}}","dynamicTriggerPathList":[{"key":"onResetClick"},{"key":"mapClicked"}],"parentColumnSpace":15.8359375,"dynamicBindingPathList":[{"key":"theme"},{"key":"boxShadow"},{"key":"defaultModel"}],"leftColumn":0.0,"defaultModel":"{{{location:JSObject1.getLocation.data}}}","borderWidth":"1","theme":"{{appsmith.theme}}","onResetClick":"{{showAlert('Successfully reset!!', '');}}","events":["onResetClick","mapClicked"],"key":"e4hj5591s2","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"FIXED","isSearchWildcard":true,"widgetId":"a3yb40l6zl","isVisible":"true","version":1.0,"uncompiledSrcDoc":{"html":"<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.css\"/>\n<script src=\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.js\"></script>\n\n<div id=\"map\"></div>\n","css":"#map {\n\theight: 100vh;\n}\n.popup-content {\n\tfont-size: 14px;\n}\n#controls {\n\tposition: absolute;\n\ttop: 10px;\n\tleft: 10px;\n\tz-index: 1000;\n\tbackground-color: white;\n\tpadding: 10px;\n\tborder-radius: 5px;\n}\nbutton {\n\tbackground-color: red;\n\tborder-color: transparent;\n\tcolor: white;\n}","js":"class lcdp_map {\n\tconstructor(containerId, options = {}) {\n\t\tthis.map = L.map(containerId, options);\n\t\tthis.markers = [];\n\t\tthis.polylines = [];\n\t\tthis.currentLocation = null;\n\t\tL.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n\t\t\tattribution: \"© OpenStreetMap contributors\",\n\t\t}).addTo(this.map);\n\t}\n\n\t/*\n   * Create a marker with a custom popup.\n   * @param {number} lat - Latitude\n   * @param {number} lng - Longitude\n   * @param {string} title - Popup title\n   * @param {string} content - Popup content\n   * @param {string} iconClass - Font Awesome class (default: 'fa-map-marker-alt')\n   * @param {string} iconColor - Icon color (default: '#003C71')\n   * @param {Object} options - Additional options for marker and popup\n   * @returns {Object} marker - The created marker\n   */\n\tcreateMarker(lat, lng, title = \"\", content = \"\", iconClass = \"fa-map-marker-alt\", iconColor = \"#003C71\", options = {}) {\n\t\tconst customIcon = L.divIcon({\n\t\t\thtml: `\n        <span class=\"fa-stack fa-lg\" style=\"font-size: 20px;\">\n          <i class=\"fa-regular fa-circle fa-stack-2x\" style=\"color: ${iconColor}; opacity: 0.8;\"></i>\n          <i class=\"${iconClass} fa-stack-1x\" style=\"color: ${iconColor};\"></i>\n        </span>\n      `,\n\t\t\tclassName: \"custom-marker-icon\",\n\t\t\ticonSize: [40, 40],\n\t\t\ticonAnchor: [20, 20],\n\t\t\tpopupAnchor: [0, -20],\n\t\t});\n\n\t\tconst markerOptions = {\n\t\t\t...options.marker,\n\t\t\ticon: customIcon,\n\t\t};\n\n\t\tconst popupOptions = {\n\t\t\t...options.popup,\n\t\t\tclassName: \"custom-popup\",\n\t\t};\n\t\t\n\t\tconst popupContent = `\n      <div class=\"popup-content\">\n        <h3 class=\"popup-title\">${title}</h3>\n        <div class=\"popup-body\">${content}</div>\n\t\t\t\t${confirmationButton}\n      </div>\n    `;\n\n\t\tconst marker = L.marker([lat, lng], markerOptions)\n\t\t.addTo(this.map)\n\t\t.bindPopup(popupContent, popupOptions)\n\t\t.openPopup();\n\n\t\tthis.markers.push(marker);\n\t\treturn marker;\n\t}\n\n\t/*\n  * Add a marker to the map.\n  * @param {number} lat - Latitude of the marker\n  * @param {number} lng - Longitude of the marker\n  * @param {string} title - Title of the marker's popup\n  * @param {string} content - Content of the popup\n  * @param {string} iconClass - Font Awesome icon class for the marker (default: 'fa-map-marker-alt')\n  * @param {string} iconColor - Color for the marker icon (default: '#003C71')\n  * @param {Object} options - Additional options for marker and popup\n  * @returns {Object} marker - The created marker\n  */\n\taddMarker(lat, lng, title = \"\", content = \"\", iconClass = \"fa-solid fa-location-dot\", iconColor = \"#003C71\", options = {}) {\n\t\tconst marker = this.createMarker(lat, lng, title, content, iconClass, iconColor, options);\n\t\tthis.markers.push(marker); // Store the marker for potential future removal or management\n\t\treturn marker;\n\t}\n\n\t/*\n   * Update the current location marker and zoom to its position.\n   * @param {number} lat - Latitude\n   * @param {number} lng - Longitude\n   * @param {string} title - Title for the marker (default: \"Current location\")\n   * @param {string} content - Content for the popup\n   * @returns {Object} marker - The current location marker\n   */\n\tupdateCurrentLocation(lat, lng, title = \"Current location\", content = \"Current location\") {\n\t\tif (this.currentLocation) {\n\t\t\tthis.currentLocation.remove();\n\t\t\tthis.markers = this.markers.filter((m) => m !== this.currentLocation);\n\t\t}\n\n\t\tthis.currentLocation = this.createMarker(\n\t\t\tlat,\n\t\t\tlng,\n\t\t\ttitle,\n\t\t\tcontent,\n\t\t\t\"fa-solid fa-location-dot\", // A unique icon for current location\n\t\t\t\"#FF0000\" // Red color for the current location\n\t\t);\n\t\tthis.markers.push(this.currentLocation);\n\t\treturn this.currentLocation;\n\t}\n\n\t/*\n   * Get the user's current GPS location and update the map with a marker.\n   * @returns {Promise<void>}\n   */\n\tasync getCurrentLocation() {\n\t\tthis.map.setView([appsmith.model.location.lat, appsmith.model.location.lng], 17);\n\n\t\tthis.updateCurrentLocation(appsmith.model.location.lat, appsmith.model.location.lng, \"Führer location\");\n\t}\n\n\t/*\n  * Calculate the distance between two geographical points (in kilometers).\n  * Uses the Haversine formula to account for the curvature of the Earth.\n  * @param {number} lat1 - Latitude of the first point\n  * @param {number} lng1 - Longitude of the first point\n  * @param {number} lat2 - Latitude of the second point\n  * @param {number} lng2 - Longitude of the second point\n  * @returns {number} distance - The distance in kilometers, rounded to two decimal places\n  */\n\tcalculateDistance(lat1, lng1, lat2, lng2) {\n\t\tconst R = 6371; // Radius of the Earth in kilometers\n\n\t\t// Convert degrees to radians\n\t\tconst dLat = this.toRad(lat2 - lat1);\n\t\tconst dLng = this.toRad(lng2 - lng1);\n\n\t\t// Convert input coordinates to radians\n\t\tconst radLat1 = this.toRad(lat1);\n\t\tconst radLat2 = this.toRad(lat2);\n\n\t\t// Apply the Haversine formula\n\t\tconst a =\n\t\t\t\t\tMath.sin(dLat / 2) * Math.sin(dLat / 2) +\n\t\t\t\t\tMath.cos(radLat1) * Math.cos(radLat2) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n\n\t\tconst c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n\t\t// Distance in kilometers\n\t\tconst distance = R * c;\n\n\t\t// Return the distance rounded to two decimal places\n\t\treturn Math.round(distance * 100) / 100;\n\t}\n\n\t/*\n  * Convert degrees to radians.\n  * @private\n  * @param {number} degrees - Degrees to convert\n  * @returns {number} radians - Converted value in radians\n  */\n\ttoRad(degrees) {\n\t\treturn (degrees * Math.PI) / 180;\n\t}\n\n\t/*\n   * Draw a polyline between two points (latitude, longitude).\n   * @param {number} lat1 - Latitude of the first point\n   * @param {number} lng1 - Longitude of the first point\n   * @param {number} lat2 - Latitude of the second point\n   * @param {number} lng2 - Longitude of the second point\n   * @param {Object} options - Optional parameters for the polyline\n   * @returns {Promise} polyline - The created polyline\n   */\n\tasync drawRoute(lat1, lng1, lat2, lng2, options = {}) {\n\t\tconst defaultOptions = {\n\t\t\tcolor: \"#003C71\", // Default color\n\t\t\tweight: 3, // Line thickness\n\t\t\topacity: 0.8, // Line opacity\n\t\t\tdashArray: null, // Dashes (null = solid line)\n\t\t\t...options,\n\t\t};\n\n\t\ttry {\n\t\t\t// Request route data from OSRM API\n\t\t\tconst response = await fetch(\n\t\t\t\t`https://router.project-osrm.org/route/v1/driving/${lng1},${lat1};${lng2},${lat2}?overview=full&geometries=geojson`\n\t\t\t);\n\t\t\tconst data = await response.json();\n\n\t\t\tif (data.code !== \"Ok\" || !data.routes.length) {\n\t\t\t\tthrow new Error(\"Could not find a route\");\n\t\t\t}\n\n\t\t\t// Get route coordinates from response\n\t\t\tconst coordinates = data.routes[0].geometry.coordinates;\n\n\t\t\t// Convert [lng, lat] to [lat, lng] for Leaflet\n\t\t\tconst latlngs = coordinates.map(coord => [coord[1], coord[0]]);\n\n\t\t\t// Delete old lines, marker\n\t\t\tthis.clearRoutes();\n\n\t\t\t// Draw\n\t\t\tconst polyline = L.polyline(latlngs, defaultOptions).addTo(this.map);\n\n\t\t\t// Added management section\n\t\t\tthis.polylines.push(polyline);\n\n\t\t\t// Automatically zooms to show the entire road\n\t\t\tthis.map.fitBounds(polyline.getBounds(), {\n\t\t\t\tpadding: [50, 50]\n\t\t\t});\n\t\t\treturn polyline;\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error drawing route:\", error);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/*\n   * Draw a polyline between two points (latitude, longitude).\n   * @param {number} lat_des - Latitude of the first point\n   * @param {number} lng_des - Longitude of the first point\n   * @param {Object} options - Optional parameters for the polyline\n   * @returns {Promise} polyline - The created polyline\n   */\n\tasync current_to_marker(lat_des, lng_des,options = {}) {\n\t\tconst defaultOptions = {\n\t\t\tcolor: \"#003C71\", // Default color\n\t\t\tweight: 3, // Line thickness\n\t\t\topacity: 0.8, // Line opacity\n\t\t\tdashArray: null, // Dashes (null = solid line)\n\t\t\t...options,\n\t\t};\n\n\t\ttry {\n\t\t\tconst position = await new Promise((resolve, reject) => {\n\t\t\t\tnavigator.geolocation.getCurrentPosition(resolve, reject, {\n\t\t\t\t\tenableHighAccuracy: true,\n\t\t\t\t\ttimeout: 5000,\n\t\t\t\t\tmaximumAge: 0,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tconst { latitude, longitude } = position.coords;\n\t\t\t// Request route data from OSRM API\n\t\t\tconst response = await fetch(\n\t\t\t\t`https://router.project-osrm.org/route/v1/driving/${longitude},${latitude};${lng_des},${lat_des}?overview=full&geometries=geojson`\n\t\t\t);\n\t\t\tconst data = await response.json();\n\n\t\t\tif (data.code !== \"Ok\" || !data.routes.length) {\n\t\t\t\tthrow new Error(\"Could not find a route\");\n\t\t\t}\n\n\t\t\t// Get route coordinates from response\n\t\t\tconst coordinates = data.routes[0].geometry.coordinates;\n\n\t\t\t// Convert [lng, lat] to [lat, lng] for Leaflet\n\t\t\tconst latlngs = coordinates.map(coord => [coord[1], coord[0]]);\n\n\t\t\t// Delete old lines, marker\n\t\t\tthis.clearRoutes();\n\n\t\t\t// Draw\n\t\t\tconst polyline = L.polyline(latlngs, defaultOptions).addTo(this.map);\n\n\t\t\t// Added management section\n\t\t\tthis.polylines.push(polyline);\n\n\t\t\t// Automatically zooms to show the entire road\n\t\t\tthis.map.fitBounds(polyline.getBounds(), {\n\t\t\t\tpadding: [50, 50]\n\t\t\t});\n\n\n\t\t\treturn polyline;\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error drawing route:\", error);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/*\n   * Remove all drawn routes (polylines) from the map.\n   */\n\tclearRoutes() {\n\t\tthis.polylines.forEach((polyline) => {\n\t\t\tpolyline.remove();\n\t\t});\n\t\tthis.polylines = [];\n\t}\n\n\t/*\n  * Remove all markers from the map.\n  */\n\tclearMarkers() {\n\t\tthis.markers.forEach((marker) => {\n\t\t\tmarker.remove();\n\t\t});\n\t\tthis.markers = [];\n\t}\n\n\t/*\n   * Find a location by address and return its coordinates.\n   * @param {string} address - The address to search\n   * @returns {Promise<{lat: number, lng: number} | null>} - Coordinates or null if not found\n   */\n\tasync searchAddress(address) {\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t`https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(\n\t\t\t\t\taddress\n\t\t\t\t)}&format=json&addressdetails=1`\n\t\t\t);\n\n\t\t\tconst data = await response.json();\n\n\t\t\tif (data && data.length > 0) {\n\t\t\t\treturn {\n\t\t\t\t\tlat: parseFloat(data[0].lat),\n\t\t\t\t\tlng: parseFloat(data[0].lon),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn null;\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error searching address:\", error);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/*\n   * Search for an address and mark it on the map.\n   * @param {string} address - The address to search\n   * @param {Object} options - Marker options\n   * @returns {Promise<Object|null>} - The created marker or null if not found\n   */\n\tasync searchAndMarkAddress(address, options = {}) {\n\t\tconst coords = await this.searchAddress(address);\n\n\t\tif (coords) {\n\t\t\tconst marker = this.createMarker(\n\t\t\t\tcoords.lat,\n\t\t\t\tcoords.lng,\n\t\t\t\taddress, // Use address as the marker title\n\t\t\t\t\"\", // No content for the popup\n\t\t\t\toptions.iconClass || \"fa-map-marker-alt\",\n\t\t\t\toptions.iconColor || \"#003C71\",\n\t\t\t\toptions\n\t\t\t);\n\n\t\t\t// Move the map to the found location\n\t\t\tthis.map.setView([coords.lat, coords.lng], 16);\n\n\t\t\treturn marker;\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\n// Appsmith integration\nappsmith.onReady(() => {\n\tvar mapApp = new lcdp_map(\"map\", {\n\t\tcenter: [21.055, 105.735136], // Default location for initialization\n\t\tzoom: 17,\n\t});\n\n\t// Call the method to get and update current location\n\tmapApp.getCurrentLocation();\n\tmapApp.map.on(\"click\", (e) => {\n\t\tappsmith.triggerEvent(\"mapClicked\", e.latlng)\n\t})\n});"},"parentId":"ly7hw5eidr","renderMode":"CANVAS","isLoading":false,"mobileTopRow":15.0,"borderRadius":"0.375rem","mobileLeftColumn":14.0,"maxDynamicHeight":9000.0,"minDynamicHeight":4.0}],"key":"9x8o9pg6bm","rightColumn":330.625,"detachFromLayout":true,"dynamicHeight":"AUTO_HEIGHT","widgetId":"ly7hw5eidr","containerStyle":"none","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"n8ibg2hlym","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":0.0,"maxDynamicHeight":9000.0,"minDynamicHeight":4.0,"flexLayers":[]}],"borderWidth":"1","flexVerticalAlignment":"stretch","key":"7nzle2chca","backgroundColor":"#FFFFFF","rightColumn":64.0,"dynamicHeight":"AUTO_HEIGHT","widgetId":"n8ibg2hlym","containerStyle":"card","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","originalTopRow":0.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":0.0,"maxDynamicHeight":9000.0,"originalBottomRow":97.0,"minDynamicHeight":10.0},{"needsErrorInfo":false,"boxShadow":"none","mobileBottomRow":41.0,"widgetName":"Modal1","isCanvas":true,"topRow":17.0,"bottomRow":277.0,"parentRowSpace":10.0,"type":"MODAL_WIDGET","shouldScrollContents":true,"minHeight":260.0,"mobileRightColumn":28.0,"animateLoading":true,"parentColumnSpace":14.0625,"leftColumn":4.0,"dynamicBindingPathList":[{"key":"borderRadius"}],"children":[{"needsErrorInfo":false,"boxShadow":"{{appsmith.theme.boxShadow.appBoxShadow}}","mobileBottomRow":240.0,"widgetName":"Canvas2","topRow":0.0,"bottomRow":260.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"shouldScrollContents":false,"minHeight":240.0,"mobileRightColumn":337.5,"parentColumnSpace":1.0,"leftColumn":0.0,"dynamicBindingPathList":[{"key":"borderRadius"},{"key":"boxShadow"}],"children":[{"needsErrorInfo":false,"boxShadow":"none","mobileBottomRow":4.0,"widgetName":"IconButton1","onClick":"{{closeModal(Modal1.name);}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","topRow":0.0,"bottomRow":4.0,"type":"ICON_BUTTON_WIDGET","mobileRightColumn":64.0,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":58.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"iconSize":24.0,"isDisabled":false,"key":"0hbot2kusr","rightColumn":64.0,"iconName":"cross","widgetId":"g8dqkxqic8","minWidth":50.0,"isVisible":true,"version":1.0,"parentId":"eum4avn20i","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"hug","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":58.0,"buttonVariant":"TERTIARY"},{"needsErrorInfo":false,"mobileBottomRow":5.0,"widgetName":"Text1","topRow":1.0,"bottomRow":7.0,"type":"TEXT_WIDGET","mobileRightColumn":41.0,"animateLoading":true,"overflow":"NONE","fontFamily":"{{appsmith.theme.fontFamily.appFont}}","dynamicTriggerPathList":[],"leftColumn":1.0,"dynamicBindingPathList":[{"key":"truncateButtonColor"},{"key":"fontFamily"},{"key":"borderRadius"}],"shouldTruncate":false,"truncateButtonColor":"{{appsmith.theme.colors.primaryColor}}","text":"Do you want to mark this location as dangerous","key":"os1j186q9h","rightColumn":41.0,"textAlign":"LEFT","dynamicHeight":"AUTO_HEIGHT","widgetId":"qj2tg1zea8","minWidth":450.0,"isVisible":true,"fontStyle":"BOLD","textColor":"#231F20","version":1.0,"parentId":"eum4avn20i","renderMode":"CANVAS","isLoading":false,"mobileTopRow":1.0,"responsiveBehavior":"fill","originalTopRow":1.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":1.0,"maxDynamicHeight":9000.0,"originalBottomRow":7.0,"fontSize":"1.25rem","minDynamicHeight":4.0},{"resetFormOnClick":false,"needsErrorInfo":false,"boxShadow":"none","mobileBottomRow":22.0,"widgetName":"Button1","onClick":"{{closeModal(Modal1.name);}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","topRow":20.0,"bottomRow":24.0,"type":"BUTTON_WIDGET","mobileRightColumn":47.0,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":31.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Close","isDisabled":false,"key":"dzwvg5ybk6","rightColumn":47.0,"isDefaultClickDisabled":true,"widgetId":"2slsb2zg2s","buttonStyle":"PRIMARY","minWidth":120.0,"isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"eum4avn20i","renderMode":"CANVAS","isLoading":false,"mobileTopRow":18.0,"responsiveBehavior":"hug","originalTopRow":20.0,"disabledWhenInvalid":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":31.0,"originalBottomRow":24.0,"buttonVariant":"SECONDARY","placement":"CENTER"},{"resetFormOnClick":false,"needsErrorInfo":false,"boxShadow":"none","mobileBottomRow":22.0,"widgetName":"Button2","onClick":"{{addLocation.run(appsmith.store.pingLocation).then(() => {\n  closeModal(Modal1.name);\n});}}","buttonColor":"{{appsmith.theme.colors.primaryColor}}","dynamicPropertyPathList":[],"topRow":20.0,"bottomRow":24.0,"type":"BUTTON_WIDGET","mobileRightColumn":63.0,"animateLoading":true,"dynamicTriggerPathList":[{"key":"onClick"}],"leftColumn":47.0,"dynamicBindingPathList":[{"key":"buttonColor"},{"key":"borderRadius"}],"text":"Confirm","isDisabled":false,"key":"dzwvg5ybk6","rightColumn":63.0,"isDefaultClickDisabled":true,"widgetId":"ahny5tx61q","buttonStyle":"PRIMARY_BUTTON","minWidth":120.0,"isVisible":true,"recaptchaType":"V3","version":1.0,"parentId":"eum4avn20i","renderMode":"CANVAS","isLoading":false,"mobileTopRow":18.0,"responsiveBehavior":"hug","disabledWhenInvalid":false,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":47.0,"buttonVariant":"PRIMARY","placement":"CENTER"}],"isDisabled":false,"key":"67act9tj81","rightColumn":337.5,"detachFromLayout":true,"dynamicHeight":"AUTO_HEIGHT","widgetId":"eum4avn20i","minWidth":450.0,"isVisible":true,"version":1.0,"parentId":"pcsfar5bal","renderMode":"CANVAS","isLoading":false,"mobileTopRow":0.0,"responsiveBehavior":"fill","borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":0.0,"maxDynamicHeight":9000.0,"minDynamicHeight":4.0,"flexLayers":[]}],"key":"8zshycq294","height":260.0,"rightColumn":28.0,"detachFromLayout":true,"dynamicHeight":"AUTO_HEIGHT","widgetId":"pcsfar5bal","canOutsideClickClose":true,"canEscapeKeyClose":true,"version":2.0,"parentId":"0","renderMode":"CANVAS","isLoading":false,"mobileTopRow":17.0,"borderRadius":"{{appsmith.theme.borderRadius.appBorderRadius}}","mobileLeftColumn":4.0,"maxDynamicHeight":9000.0,"width":456.0,"minDynamicHeight":24.0}]},"layoutOnLoadActions":[[{"id":"PageUserHome_JSObject1.getLocation","name":"JSObject1.getLocation","collectionId":"PageUserHome_JSObject1","confirmBeforeExecute":false,"pluginType":"JS","jsonPathKeys":["async function () {\n  var ans = await appsmith.geolocation.getCurrentPosition();\n  const {latitude: lat, longitude: lng} = ans.coords;\n  return {\n    lat,\n    lng\n  };\n}"],"timeoutInMillisecond":10000.0}]],"layoutOnLoadActionErrors":[],"validOnPageLoadActions":true,"id":"PageUserHome","deleted":false,"policies":[],"userPermissions":[]}],"userPermissions":[],"policyMap":{},"isHidden":false},"publishedPage":{"name":"PageUserHome","slug":"pageuserhome","layouts":[{"viewMode":false,"dsl":{"widgetName":"MainContainer","backgroundColor":"none","rightColumn":1224.0,"snapColumns":64.0,"detachFromLayout":true,"widgetId":"0","topRow":0.0,"bottomRow":380.0,"containerStyle":"none","snapRows":68.0,"parentRowSpace":1.0,"type":"CANVAS_WIDGET","canExtend":true,"version":90.0,"minHeight":700.0,"parentColumnSpace":1.0,"dynamicBindingPathList":[],"leftColumn":0.0,"children":[]},"layoutOnLoadActions":[],"layoutOnLoadActionErrors":[],"validOnPageLoadActions":true,"id":"PageUserHome","deleted":false,"policies":[],"userPermissions":[]}],"userPermissions":[],"policyMap":{},"isHidden":false},"gitSyncId":"6757d3bea58e8627004e15ac_d8f12841-0a88-4872-b4d9-f0b4f51debdb","deleted":false}],"actionList":[{"pluginType":"DB","pluginId":"mongo-plugin","unpublishedAction":{"name":"addUser","datasource":{"name":"rescue","pluginId":"mongo-plugin","messages":[],"isAutoGenerated":false,"id":"rescue","deleted":false,"policyMap":{},"policies":[],"userPermissions":[]},"pageId":"PageRegister","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"selfReferencingDataPaths":[],"formData":{"command":{"data":"INSERT"},"aggregate":{"limit":{"data":"10"},"arrayPipelines":{"data":""}},"delete":{"limit":{"data":"SINGLE"},"query":{"data":"{{{id:{$ne:1}}}}"}},"updateMany":{"limit":{"data":"SINGLE"},"query":{"data":""},"update":{"data":""}},"smartSubstitution":{"data":true},"collection":{"data":"nguoi_dungs"},"find":{"skip":{"data":""},"query":{"data":""},"sort":{"data":""},"limit":{"data":""},"projection":{"data":""}},"insert":{"documents":{"data":"{{{\n\tcccd:InpCitizenID.text,\n\tpassword: InpPassword.text,\n}}}"}},"count":{"query":{"data":""}},"distinct":{"query":{"data":""},"key":{"data":""}},"misc":{"formToNativeQuery":{"data":"{\n  \"insert\": \"nguoi_dungs\",\n  \"documents\": {{{\n\tcccd:InpCitizenID.text,\n\tpassword: InpPassword.text,\n}}}\n}\n","status":"SUCCESS"}}}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"formData.delete.query.data"},{"key":"formData.insert.documents.data"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["{id:{$ne:1}}","{\n\tcccd:InpCitizenID.text,\n\tpassword: InpPassword.text,\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policyMap":{},"userPermissions":[],"createdAt":"2024-12-10T06:56:47Z"},"publishedAction":{"name":"addUser","datasource":{"name":"rescue","pluginId":"mongo-plugin","messages":[],"isAutoGenerated":false,"id":"rescue","deleted":false,"policyMap":{},"policies":[],"userPermissions":[]},"pageId":"PageRegister","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"selfReferencingDataPaths":[],"formData":{"command":{"data":"INSERT"},"aggregate":{"limit":{"data":"10"},"arrayPipelines":{"data":""}},"delete":{"limit":{"data":"SINGLE"},"query":{"data":"{{{id:{$ne:1}}}}"}},"updateMany":{"limit":{"data":"SINGLE"},"query":{"data":""},"update":{"data":""}},"smartSubstitution":{"data":true},"collection":{"data":"nguoi_dungs"},"find":{"skip":{"data":""},"query":{"data":""},"sort":{"data":""},"limit":{"data":""},"projection":{"data":""}},"insert":{"documents":{"data":"{{{\n\tcccd:InpCitizenID.text,\n\tpassword: InpPassword.text,\n}}}"}},"count":{"query":{"data":""}},"distinct":{"query":{"data":""},"key":{"data":""}},"misc":{"formToNativeQuery":{"data":"{\n  \"insert\": \"nguoi_dungs\",\n  \"documents\": {{{\n\tcccd:InpCitizenID.text,\n\tpassword: InpPassword.text,\n}}}\n}\n","status":"SUCCESS"}}}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"formData.delete.query.data"},{"key":"formData.insert.documents.data"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["{id:{$ne:1}}","{\n\tcccd:InpCitizenID.text,\n\tpassword: InpPassword.text,\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policyMap":{},"userPermissions":[],"createdAt":"2024-12-10T06:56:47Z"},"gitSyncId":"6757d3bea58e8627004e15ac_90e64d6d-8b4d-4fc5-b78e-9fb8fb4fb180","id":"PageRegister_addUser","deleted":false},{"pluginType":"DB","pluginId":"mongo-plugin","unpublishedAction":{"name":"matchUser","datasource":{"name":"rescue","pluginId":"mongo-plugin","messages":[],"isAutoGenerated":false,"id":"rescue","deleted":false,"policyMap":{},"policies":[],"userPermissions":[]},"pageId":"PageLogin","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"selfReferencingDataPaths":[],"formData":{"command":{"data":"FIND"},"aggregate":{"limit":{"data":"10"},"arrayPipelines":{"data":""}},"delete":{"limit":{"data":"SINGLE"},"query":{"data":""}},"updateMany":{"limit":{"data":"SINGLE"},"query":{"data":""},"update":{"data":""}},"smartSubstitution":{"data":true},"misc":{"formToNativeQuery":{"data":"{\n  \"find\": \"nguoi_dungs\",\n  \"filter\": {{{\n\tcccd: InpCitizenID.text,\n\tpassword: InpPassword.text\n}}},\n  \"limit\": 10,\n  \"batchSize\": 10\n}\n","status":"SUCCESS"}},"collection":{"data":"nguoi_dungs"},"find":{"skip":{"data":""},"query":{"data":"{{{\n\tcccd: InpCitizenID.text,\n\tpassword: InpPassword.text\n}}}"},"sort":{"data":""},"limit":{"data":""},"projection":{"data":""}},"insert":{"documents":{"data":""}},"count":{"query":{"data":""}},"distinct":{"query":{"data":""},"key":{"data":""}}}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"formData.find.query.data"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["{\n\tcccd: InpCitizenID.text,\n\tpassword: InpPassword.text\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policyMap":{},"userPermissions":[],"createdAt":"2024-12-10T09:12:22Z"},"publishedAction":{"name":"matchUser","datasource":{"name":"rescue","pluginId":"mongo-plugin","messages":[],"isAutoGenerated":false,"id":"rescue","deleted":false,"policyMap":{},"policies":[],"userPermissions":[]},"pageId":"PageLogin","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"selfReferencingDataPaths":[],"formData":{"command":{"data":"FIND"},"aggregate":{"limit":{"data":"10"},"arrayPipelines":{"data":""}},"delete":{"limit":{"data":"SINGLE"},"query":{"data":""}},"updateMany":{"limit":{"data":"SINGLE"},"query":{"data":""},"update":{"data":""}},"smartSubstitution":{"data":true},"misc":{"formToNativeQuery":{"data":"{\n  \"find\": \"nguoi_dungs\",\n  \"filter\": {{{\n\tcccd: InpCitizenID.text,\n\tpassword: InpPassword.text\n}}},\n  \"limit\": 10,\n  \"batchSize\": 10\n}\n","status":"SUCCESS"}},"collection":{"data":"nguoi_dungs"},"find":{"skip":{"data":""},"query":{"data":"{{{\n\tcccd: InpCitizenID.text,\n\tpassword: InpPassword.text\n}}}"},"sort":{"data":""},"limit":{"data":""},"projection":{"data":""}},"insert":{"documents":{"data":""}},"count":{"query":{"data":""}},"distinct":{"query":{"data":""},"key":{"data":""}}}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"formData.find.query.data"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["{\n\tcccd: InpCitizenID.text,\n\tpassword: InpPassword.text\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policyMap":{},"userPermissions":[],"createdAt":"2024-12-10T09:12:22Z"},"gitSyncId":"6757d3bea58e8627004e15ac_369da0d6-9179-4586-aa1a-4ceefcd3a57c","id":"PageLogin_matchUser","deleted":false},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"authenticate","fullyQualifiedName":"JSObject1.authenticate","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policyMap":{},"policies":[],"userPermissions":[]},"pageId":"PageLogin","collectionId":"PageLogin_JSObject1","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"function (usersFound) {\n  if (usersFound.length == 0) {\n    showModal(\"MdUserNotFound\");\n    return;\n  }\n  storeValue(\"citizenID\", usersFound[0].cccd);\n  navigateTo(\"PageUserHome\");\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"usersFound"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["function (usersFound) {\n  if (usersFound.length == 0) {\n    showModal(\"MdUserNotFound\");\n    return;\n  }\n  storeValue(\"citizenID\", usersFound[0].cccd);\n  navigateTo(\"PageUserHome\");\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policyMap":{},"userPermissions":[],"createdAt":"2024-12-10T09:29:59Z"},"publishedAction":{"name":"authenticate","fullyQualifiedName":"JSObject1.authenticate","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policyMap":{},"policies":[],"userPermissions":[]},"pageId":"PageLogin","collectionId":"PageLogin_JSObject1","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"function (usersFound) {\n  if (usersFound.length == 0) {\n    showModal(\"MdUserNotFound\");\n    return;\n  }\n  storeValue(\"citizenID\", usersFound[0].cccd);\n  navigateTo(\"PageUserHome\");\n}","selfReferencingDataPaths":[],"jsArguments":[{"name":"usersFound"}]},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["function (usersFound) {\n  if (usersFound.length == 0) {\n    showModal(\"MdUserNotFound\");\n    return;\n  }\n  storeValue(\"citizenID\", usersFound[0].cccd);\n  navigateTo(\"PageUserHome\");\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policyMap":{},"userPermissions":[],"createdAt":"2024-12-10T09:29:59Z"},"gitSyncId":"6757d3bea58e8627004e15ac_a02189fc-64ee-457e-8976-bd05355f494e","id":"PageLogin_JSObject1.authenticate","deleted":false},{"pluginType":"DB","pluginId":"mongo-plugin","unpublishedAction":{"name":"Query1","datasource":{"name":"rescue","pluginId":"mongo-plugin","messages":[],"isAutoGenerated":false,"id":"rescue","deleted":false,"policyMap":{},"policies":[],"userPermissions":[]},"pageId":"PageLogin","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"selfReferencingDataPaths":[],"formData":{"command":{"data":"FIND"},"aggregate":{"limit":{"data":"10"},"arrayPipelines":{"data":""}},"delete":{"limit":{"data":"SINGLE"},"query":{"data":""}},"updateMany":{"limit":{"data":"SINGLE"},"query":{"data":""},"update":{"data":""}},"smartSubstitution":{"data":true},"collection":{"data":"nguoi_dungs"},"find":{"skip":{"data":""},"query":{"data":""},"sort":{"data":""},"limit":{"data":""},"projection":{"data":""}},"insert":{"documents":{"data":""}},"count":{"query":{"data":""}},"distinct":{"query":{"data":""},"key":{"data":""}},"misc":{"formToNativeQuery":{"data":"{\n  \"find\": \"nguoi_dungs\",\n  \"limit\": 10,\n  \"batchSize\": 10\n}\n","status":"SUCCESS"}}}},"executeOnLoad":false,"dynamicBindingPathList":[],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":[],"userSetOnLoad":false,"confirmBeforeExecute":false,"deletedAt":"2024-12-10T14:58:25Z","policyMap":{},"userPermissions":[],"createdAt":"2024-12-10T09:30:49Z"},"publishedAction":{"name":"Query1","datasource":{"name":"rescue","pluginId":"mongo-plugin","messages":[],"isAutoGenerated":false,"id":"rescue","deleted":false,"policyMap":{},"policies":[],"userPermissions":[]},"pageId":"PageLogin","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"selfReferencingDataPaths":[],"formData":{"command":{"data":"FIND"},"aggregate":{"limit":{"data":"10"},"arrayPipelines":{"data":""}},"delete":{"limit":{"data":"SINGLE"},"query":{"data":""}},"updateMany":{"limit":{"data":"SINGLE"},"query":{"data":""},"update":{"data":""}},"smartSubstitution":{"data":true},"collection":{"data":"nguoi_dungs"},"find":{"skip":{"data":""},"query":{"data":""},"sort":{"data":""},"limit":{"data":""},"projection":{"data":""}},"insert":{"documents":{"data":""}},"count":{"query":{"data":""}},"distinct":{"query":{"data":""},"key":{"data":""}},"misc":{"formToNativeQuery":{"data":"{\n  \"find\": \"nguoi_dungs\",\n  \"limit\": 10,\n  \"batchSize\": 10\n}\n","status":"SUCCESS"}}}},"executeOnLoad":false,"dynamicBindingPathList":[],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":[],"userSetOnLoad":false,"confirmBeforeExecute":false,"policyMap":{},"userPermissions":[],"createdAt":"2024-12-10T09:30:49Z"},"gitSyncId":"6757d3bea58e8627004e15ac_f94462f3-fd6c-4658-a0dc-19ed9824b59c","id":"PageLogin_Query1","deleted":false},{"pluginType":"JS","pluginId":"js-plugin","unpublishedAction":{"name":"getLocation","fullyQualifiedName":"JSObject1.getLocation","datasource":{"name":"UNUSED_DATASOURCE","pluginId":"js-plugin","messages":[],"isAutoGenerated":false,"deleted":false,"policyMap":{},"policies":[],"userPermissions":[]},"pageId":"PageUserHome","collectionId":"PageUserHome_JSObject1","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"body":"async function () {\n  var ans = await appsmith.geolocation.getCurrentPosition();\n  const {latitude: lat, longitude: lng} = ans.coords;\n  return {\n    lat,\n    lng\n  };\n}","selfReferencingDataPaths":[],"jsArguments":[]},"executeOnLoad":true,"dynamicBindingPathList":[{"key":"body"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["async function () {\n  var ans = await appsmith.geolocation.getCurrentPosition();\n  const {latitude: lat, longitude: lng} = ans.coords;\n  return {\n    lat,\n    lng\n  };\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policyMap":{},"userPermissions":[],"createdAt":"2024-12-10T11:13:45Z"},"publishedAction":{"datasource":{"messages":[],"isAutoGenerated":false,"deleted":false,"policyMap":{},"policies":[],"userPermissions":[]},"messages":[],"userSetOnLoad":false,"confirmBeforeExecute":false,"policyMap":{},"userPermissions":[],"createdAt":"2024-12-10T11:13:45Z"},"gitSyncId":"6757d3bea58e8627004e15ac_e584e6db-7739-4113-9e6e-b804f04cf9d4","id":"PageUserHome_JSObject1.getLocation","deleted":false},{"pluginType":"DB","pluginId":"mongo-plugin","unpublishedAction":{"name":"addLocation","datasource":{"name":"rescue","pluginId":"mongo-plugin","messages":[],"isAutoGenerated":false,"id":"rescue","deleted":false,"policyMap":{},"policies":[],"userPermissions":[]},"pageId":"PageUserHome","actionConfiguration":{"timeoutInMillisecond":10000.0,"paginationType":"NONE","encodeParamsToggle":true,"selfReferencingDataPaths":[],"formData":{"command":{"data":"INSERT"},"aggregate":{"limit":{"data":"10"},"arrayPipelines":{"data":""}},"delete":{"limit":{"data":"SINGLE"},"query":{"data":""}},"updateMany":{"limit":{"data":"SINGLE"},"query":{"data":""},"update":{"data":""}},"smartSubstitution":{"data":true},"misc":{"formToNativeQuery":{"data":"{\n  \"insert\": \"vung_nguy_hiem\",\n  \"documents\": {{{\n\ttoa_do: appsmith.store.pingLocation,\n\tcreated_at: new Date()\n}}}\n}\n","status":"SUCCESS"}},"find":{"query":{"data":"{{{\n\ttoa_do: appsmith.store.pingLocation\n}}}"},"skip":{"data":""},"sort":{"data":""},"limit":{"data":""},"projection":{"data":""}},"collection":{"data":"vung_nguy_hiem"},"insert":{"documents":{"data":"{{{\n\ttoa_do: appsmith.store.pingLocation,\n\tcreated_at: new Date()\n}}}"}},"count":{"query":{"data":""}},"distinct":{"query":{"data":""},"key":{"data":""}}}},"executeOnLoad":false,"dynamicBindingPathList":[{"key":"formData.find.query.data"},{"key":"formData.insert.documents.data"}],"isValid":true,"invalids":[],"messages":[],"jsonPathKeys":["{\n\ttoa_do: appsmith.store.pingLocation,\n\tcreated_at: new Date()\n}","{\n\ttoa_do: appsmith.store.pingLocation\n}"],"userSetOnLoad":false,"confirmBeforeExecute":false,"policyMap":{},"userPermissions":[],"createdAt":"2024-12-10T12:53:08Z"},"publishedAction":{"datasource":{"messages":[],"isAutoGenerated":false,"deleted":false,"policyMap":{},"policies":[],"userPermissions":[]},"messages":[],"userSetOnLoad":false,"confirmBeforeExecute":false,"policyMap":{},"userPermissions":[],"createdAt":"2024-12-10T12:53:08Z"},"gitSyncId":"6757d3bea58e8627004e15ac_25149e46-7425-4272-9b99-8c00dc8b25ca","id":"PageUserHome_addLocation","deleted":false}],"actionCollectionList":[{"unpublishedCollection":{"name":"JSObject1","pageId":"PageLogin","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\tauthenticate: function(usersFound) {\n\t\tif (usersFound.length == 0) {\n\t\t\tshowModal(\"MdUserNotFound\")\n\t\t\treturn\n\t\t}\n\t\tstoreValue(\"citizenID\", usersFound[0].cccd)\n\t\tnavigateTo(\"PageUserHome\")\n\t}\n}","variables":[],"userPermissions":[]},"publishedCollection":{"name":"JSObject1","pageId":"PageLogin","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\tauthenticate: function(usersFound) {\n\t\tif (usersFound.length == 0) {\n\t\t\tshowModal(\"MdUserNotFound\")\n\t\t\treturn\n\t\t}\n\t\tstoreValue(\"citizenID\", usersFound[0].cccd)\n\t\tnavigateTo(\"PageUserHome\")\n\t}\n}","variables":[],"userPermissions":[]},"gitSyncId":"6757d3bea58e8627004e15ac_906748d2-5005-4d5d-b35b-9d379817db25","id":"PageLogin_JSObject1","deleted":false},{"unpublishedCollection":{"name":"JSObject1","pageId":"PageUserHome","pluginId":"js-plugin","pluginType":"JS","actions":[],"archivedActions":[],"body":"export default {\n\tgetLocation: async function(){\n\t\tvar ans = await appsmith.geolocation.getCurrentPosition();\n\t\tconst { latitude:lat, longitude:lng } = ans.coords;\n\t\treturn {lat,lng}\n\t},\n}","variables":[],"userPermissions":[]},"gitSyncId":"6757d3bea58e8627004e15ac_d62c60a3-3332-46f7-b38c-87626747a5b7","id":"PageUserHome_JSObject1","deleted":false}],"editModeTheme":{"name":"Default-New","displayName":"Modern","isSystemTheme":true,"deleted":false},"publishedTheme":{"name":"Default-New","displayName":"Modern","isSystemTheme":true,"deleted":false}}